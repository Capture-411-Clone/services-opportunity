version: '3'

services:
  dev_capture411_opportunity_postgres:
    container_name: dev_capture411_opportunity_postgres
    image: postgres:14.4-alpine
    restart: unless-stopped
    env_file: "$PWD/.env.development"
    environment:
      POSTGRES_DB: ${DATABASE_DEFAULT_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_PORT: ${DATABASE_PORT}
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data
    expose:
      - "${DATABASE_PORT}"
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes: 
      - "$PWD/scripts/database/postgres-init.sh:/docker-entrypoint-initdb.d/postgres-init.sh"
      - dev_capture411_opportunity_postgres_data:/var/lib/postgresql/data
      # TODO: Add migrate and seed scripts here
    command: ["postgres", "-c", "log_statement=all", "-p", "${DATABASE_PORT}"]
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 120s
      timeout: 5s
      retries: 5
    networks:
      capture411Bridge:

  dev_capture411_opportunity_service:
    env_file: "$PWD/.env.development"
    environment:
      - ENVIROMENT=development
      # go private TODO: Check to sync later with opportunity github
      - GOPRIVATE=gitlab.opportunity.ai,gitag.ir
    container_name: dev_capture411_opportunity_service
    build:
      context: .
      dockerfile: Dockerfile.local
    working_dir: /app
    # healthcheck:
    #   test: [ "CMD", "curl", "-f", "http://dev_capture411_opportunity_service:${INTERNAL_PORT}/healthcheck" ]
    #   interval: 60s
    #   timeout: 90s
    #   retries: 2
    expose:
      - ${EXTERNAL_PORT}
      - ${INTERNAL_PORT}
    ports:
      - ${EXTERNAL_PORT}:${INTERNAL_PORT}
    command: 
     - 'dockerize'
     - '-wait'
     - 'tcp://dev_capture411_opportunity_postgres:${DATABASE_PORT}'
     - '-timeout'
     - '10s'
     - './scripts/dev.sh'
    volumes:
      # - $HOME/.ssh:/root/.ssh
      - $PWD/.gitconfig:/root/.gitconfig
      - $PWD/:/app
    depends_on: 
      - dev_capture411_opportunity_postgres
    networks:
      capture411Bridge:
    restart: unless-stopped

volumes:
  dev_capture411_opportunity_postgres_data:

networks:
  capture411Bridge:
    external: true